name: Manage Reservation CI/CD

on:
  push:
    branches:
      - main
env:
    DOCKER_USER_THEJINA: ${{ secrets.DOCKER_USER_THEJINA }}
    DOCKER_PASSWORD_THEJINA: ${{ secrets.DOCKER_PASSWORD_THEJINA }}
    RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
    CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}

jobs:
    admin-service-build:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Docker login
          run: | # Login to Dockerhub - Thejina
              docker login -u $DOCKER_USER_THEJINA -p $DOCKER_PASSWORD_THEJINA
        - name: Build Docker
          run: | # Build Docker image
              docker build -t thejina/managereservation:latest .
        - name: Push Docker
          run: | # Push Docker image
              docker push thejina/managereservation:latest    

#    admin-service-deploy:
#        runs-on: ubuntu-latest
#        needs: admin-service-build  # Specifies dependency
#        if: success()
#        steps:
#        - uses: actions/checkout@v2 # Checkout the code
#        - name: Install Azure CLI
#          run: |
#            sudo apt-get update && sudo apt-get install -y azure-cli
#        - name: Azure Login
#          run: az login --service-principal -u $OIDC_CLIENT_ID -p $OIDC_CLIENT_SECRET --tenant $OIDC_TENANT_ID
#          env:
#            OIDC_CLIENT_ID: ${{ secrets.OIDC_CLIENT_ID }}
#            OIDC_CLIENT_SECRET: ${{ secrets.OIDC_CLIENT_SECRET }}
#            OIDC_TENANT_ID: ${{ secrets.OIDC_TENANT_ID }}
#        - name: Azure AKS
#          run: az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME
#        - name: Deploy to AKS
#          run: | # Apply deployment
#              kubectl apply -f deployments/.
#        - name: Restart pods
#          run: | # Restart pods
#              kubectl rollout restart -n adminservice deployment/adminservice